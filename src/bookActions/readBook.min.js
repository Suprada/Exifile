import{updatePollingCounter}from"../components/overlay";import{scrapeCurrentPage}from"./scrapeCurrentPage";import{waitForChapterToLoad}from"../util";export const readBook=async(highlights,lastPage,chapterNames)=>{let currentPage=1,highlightsObj={},cntr=1,nb1=[],nb2=[],t={},quitLoop=!1;for(console.log("Reading book now",currentPage,lastPage,quitLoop);!isNaN(currentPage)&&currentPage<lastPage&&!1===quitLoop;){cntr++,t=await scrapeCurrentPage(),currentPage=t.currentPage;const chapterHeading=document.getElementsByClassName("visually_hidden chapter_title_heading")[0].innerText,pollingMsg=`In chapter: <em>${chapterHeading}</em>. Loop ${cntr}</In>`;await updatePollingCounter(pollingMsg),highlightsObj=Object.assign(highlightsObj,t.scrapedHighlights),nb1=document.getElementsByClassName("only_next_btn"),nb2=document.getElementsByClassName("load_next_btn");const numChapters=chapterNames.length;nb1&&nb1.length>0?(nb1[0].scrollIntoView(),nb1[0].getElementsByTagName("button")[0].click(),await waitForChapterToLoad(chapterHeading)):nb2&&nb2.length>0&&chapterHeading!==chapterNames[numChapters-1]?(nb2[0].scrollIntoView(),nb2[0].click(),await waitForChapterToLoad(chapterHeading,currentPage)):(console.log("quitting loop"),quitLoop=!0)}return highlightsObj};